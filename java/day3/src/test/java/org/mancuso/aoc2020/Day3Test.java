/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.mancuso.aoc2020;

import org.junit.Test;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

import static org.junit.Assert.*;

public class Day3Test {
    @Test public void testSmall() throws IOException {
        Day3 d3 = new Day3();
        d3.load("small");
        boolean[][] t = d3.mapTemplate;
        assertNotNull(t);
//        for(int y=0;y<t.length;y++) {
//            for (int x = 0; x < t[y].length; x++) {
//                if(t[x][y]) {
//                   System.out.print('#');
//                } else {
//                    System.out.print('.');
//                }
//            }
//            System.out.println();
//        }
        Path p = Paths.get("small");
        assertFalse(t[0][0]);
        assertTrue(t[2][0]);
        assertFalse(t[3][5]);
        assertTrue(t[4][5]);
        assertFalse(t[9][10]);
        assertTrue(t[10][10]);

        int hits=d3.ride(new Point(0,0),new Slope(3,1));
        assertEquals(7,hits);
    }
    @Test public void testPart2() throws IOException {
        Day3 d3 = new Day3();
        d3.load("small");
        Point start = new Point(0,0);
//        2 - 1/1
        assertEquals(2,d3.ride(start,new Slope(1,1)));
//        7 - 3/1
        assertEquals(7,d3.ride(start,new Slope(3,1)));
//        3 - 5/1
        assertEquals(3,d3.ride(start,new Slope(5,1)));
//        4 - 7/1
        assertEquals(4,d3.ride(start,new Slope(7,1)));
//        2 - 2/1
        assertEquals(2,d3.ride(start,new Slope(1,2)));
    }
}
